{"version":3,"file":"useLocation.cjs","sources":["../../src/useLocation.tsx"],"sourcesContent":["import { useRouterState } from './useRouterState'\nimport type { AnyRouter, RegisteredRouter, RouterState } from './router'\n\nexport function useLocation<\n  TRouter extends AnyRouter = RegisteredRouter,\n  TLocationState = RouterState<TRouter['routeTree']>['location'],\n  TSelected = TLocationState,\n>(opts?: { select?: (state: TLocationState) => TSelected }): TSelected {\n  return useRouterState({\n    select: (state) =>\n      opts?.select\n        ? opts.select(state.location as TLocationState)\n        : (state.location as TSelected),\n  })\n}\n"],"names":["useRouterState"],"mappings":";;;AAGO,SAAS,YAId,MAAqE;AACrE,SAAOA,8BAAe;AAAA,IACpB,QAAQ,CAAC,WACP,6BAAM,UACF,KAAK,OAAO,MAAM,QAA0B,IAC3C,MAAM;AAAA,EAAA,CACd;AACH;;"}