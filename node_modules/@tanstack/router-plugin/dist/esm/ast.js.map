{"version":3,"file":"ast.js","sources":["../../src/ast.ts"],"sourcesContent":["import * as babel from '@babel/core'\nimport '@babel/parser'\n// @ts-expect-error\nimport _babelPluginJsx from '@babel/plugin-syntax-jsx'\n// @ts-expect-error\nimport _babelPluginTypeScript from '@babel/plugin-syntax-typescript'\n\nlet babelPluginJsx = _babelPluginJsx\nlet babelPluginTypeScript = _babelPluginTypeScript\n\nif (babelPluginJsx.default) {\n  babelPluginJsx = babelPluginJsx.default\n}\n\nif (babelPluginTypeScript.default) {\n  babelPluginTypeScript = babelPluginTypeScript.default\n}\n\nexport type ParseAstOptions = {\n  code: string\n  filename: string\n  root: string\n}\n\nexport function parseAst(opts: ParseAstOptions) {\n  const babelPlugins: Array<babel.PluginItem> = [\n    babelPluginJsx,\n    [\n      babelPluginTypeScript,\n      {\n        isTSX: true,\n      },\n    ],\n  ]\n\n  return babel.parse(opts.code, {\n    plugins: babelPlugins,\n    root: opts.root,\n    filename: opts.filename,\n    sourceMaps: true,\n    sourceType: 'module',\n  })\n}\n"],"names":[],"mappings":";;;;AAOA,IAAI,iBAAiB;AACrB,IAAI,wBAAwB;AAE5B,IAAI,eAAe,SAAS;AAC1B,mBAAiB,eAAe;AAClC;AAEA,IAAI,sBAAsB,SAAS;AACjC,0BAAwB,sBAAsB;AAChD;AAQO,SAAS,SAAS,MAAuB;AAC9C,QAAM,eAAwC;AAAA,IAC5C;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,QACE,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EAAA;AAGK,SAAA,MAAM,MAAM,KAAK,MAAM;AAAA,IAC5B,SAAS;AAAA,IACT,MAAM,KAAK;AAAA,IACX,UAAU,KAAK;AAAA,IACf,YAAY;AAAA,IACZ,YAAY;AAAA,EAAA,CACb;AACH;"}