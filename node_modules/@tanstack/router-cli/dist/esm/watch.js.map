{"version":3,"file":"watch.js","sources":["../../src/watch.ts"],"sourcesContent":["import path from 'node:path'\nimport chokidar from 'chokidar'\nimport { generator, getConfig } from '@tanstack/router-generator'\n\nexport function watch() {\n  const configWatcher = chokidar.watch(\n    path.resolve(process.cwd(), 'tsr.config.json'),\n  )\n\n  let watcher = new chokidar.FSWatcher({})\n\n  const generatorWatcher = () => {\n    const config = getConfig()\n\n    watcher.close()\n\n    console.info(`TSR: Watching routes (${config.routesDirectory})...`)\n    watcher = chokidar.watch(config.routesDirectory)\n\n    watcher.on('ready', async () => {\n      const handle = async () => {\n        try {\n          await generator(config)\n        } catch (err) {\n          console.error(err)\n          console.info()\n        }\n      }\n\n      await handle()\n\n      let timeout: ReturnType<typeof setTimeout> | undefined\n\n      const deduped = (file: string) => {\n        if (timeout) {\n          clearTimeout(timeout)\n        }\n\n        timeout = setTimeout(handle, 10)\n      }\n\n      watcher.on('change', deduped)\n      watcher.on('add', deduped)\n      watcher.on('unlink', deduped)\n    })\n  }\n\n  configWatcher.on('ready', generatorWatcher)\n  configWatcher.on('change', generatorWatcher)\n}\n"],"names":[],"mappings":";;;AAIO,SAAS,QAAQ;AACtB,QAAM,gBAAgB,SAAS;AAAA,IAC7B,KAAK,QAAQ,QAAQ,IAAA,GAAO,iBAAiB;AAAA,EAAA;AAG/C,MAAI,UAAU,IAAI,SAAS,UAAU,CAAE,CAAA;AAEvC,QAAM,mBAAmB,MAAM;AAC7B,UAAM,SAAS;AAEf,YAAQ,MAAM;AAEd,YAAQ,KAAK,yBAAyB,OAAO,eAAe,MAAM;AACxD,cAAA,SAAS,MAAM,OAAO,eAAe;AAEvC,YAAA,GAAG,SAAS,YAAY;AAC9B,YAAM,SAAS,YAAY;AACrB,YAAA;AACF,gBAAM,UAAU,MAAM;AAAA,iBACf,KAAK;AACZ,kBAAQ,MAAM,GAAG;AACjB,kBAAQ,KAAK;AAAA,QACf;AAAA,MAAA;AAGF,YAAM,OAAO;AAET,UAAA;AAEE,YAAA,UAAU,CAAC,SAAiB;AAChC,YAAI,SAAS;AACX,uBAAa,OAAO;AAAA,QACtB;AAEU,kBAAA,WAAW,QAAQ,EAAE;AAAA,MAAA;AAGzB,cAAA,GAAG,UAAU,OAAO;AACpB,cAAA,GAAG,OAAO,OAAO;AACjB,cAAA,GAAG,UAAU,OAAO;AAAA,IAAA,CAC7B;AAAA,EAAA;AAGW,gBAAA,GAAG,SAAS,gBAAgB;AAC5B,gBAAA,GAAG,UAAU,gBAAgB;AAC7C;"}