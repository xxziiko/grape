/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */

import type { NodePath } from '@babel/traverse';
import * as t from '@babel/types';
import StateManager from '../../utils/state-manager';
import { type FunctionConfig } from '../../utils/evaluate-path';
export declare function evaluateStyleXCreateArg(
  path: NodePath,
  traversalState: StateManager,
  functions: FunctionConfig,
): Readonly<{
  confident: boolean;
  value: any;
  deopt?: null | NodePath;
  fns?: {
    [$$Key$$: string]: [
      Array<t.Identifier>,
      { readonly [$$Key$$: string]: t.Expression | t.PatternLike },
    ];
  };
}>;
