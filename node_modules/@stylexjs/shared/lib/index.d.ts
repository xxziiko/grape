/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */

export type {
  RawStyles,
  StyleRule,
  TNestableStyleValue,
  TRawValue,
  TStyleValue,
} from './common-types';
import styleXCreateSet from './stylex-create';
import styleXDefineVars from './stylex-define-vars';
import styleXCreateTheme from './stylex-create-theme';
import stylexKeyframes from './stylex-keyframes';
import stylexInclude, {
  IncludedStyles as _IncludedStyles,
} from './stylex-include';
import stylexFirstThatWorks from './stylex-first-that-works';
import hash from './hash';
import genFileBasedIdentifier from './utils/file-based-identifier';
import * as m from './messages';
export * as types from './types';
import type {
  InjectableStyle as _InjectableStyle,
  CompiledNamespaces as _CompiledNamespaces,
  MutableCompiledNamespaces as _MutableCompiledNamespaces,
  StyleXOptions as _StyleXOptions,
} from './common-types';
export declare const create: typeof styleXCreateSet;
export declare const defineVars: typeof styleXDefineVars;
export declare const createTheme: typeof styleXCreateTheme;
export declare const keyframes: typeof stylexKeyframes;
export declare const include: typeof stylexInclude;
export declare const utils: {
  hash: typeof hash;
  genFileBasedIdentifier: typeof genFileBasedIdentifier;
};
export declare const messages: typeof m;
export declare const IncludedStyles: typeof _IncludedStyles;
export declare const firstThatWorks: typeof stylexFirstThatWorks;
export type InjectableStyle = _InjectableStyle;
export type CompiledNamespaces = _CompiledNamespaces;
export type MutableCompiledNamespaces = _MutableCompiledNamespaces;
export type StyleXOptions = _StyleXOptions;
