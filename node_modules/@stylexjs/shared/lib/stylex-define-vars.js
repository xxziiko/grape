"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = styleXDefineVars;
var _hash = _interopRequireDefault(require("./hash"));
var _objectUtils = require("./utils/object-utils");
var _defaultOptions = require("./utils/default-options");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function styleXDefineVars(variables, options) {
  const {
    classNamePrefix,
    themeName
  } = {
    ..._defaultOptions.defaultOptions,
    ...options
  };
  const themeNameHash = classNamePrefix + (0, _hash.default)(themeName);
  const variablesMap = (0, _objectUtils.objMap)(variables, (value, key) => {
    const nameHash = classNamePrefix + (0, _hash.default)(`${themeName}.${key}`);
    return {
      nameHash,
      value
    };
  });
  const themeVariablesObject = (0, _objectUtils.objMap)(variablesMap, _ref => {
    let {
      nameHash
    } = _ref;
    return `var(--${nameHash})`;
  });
  const injectableStyles = constructCssVariablesString(variablesMap, themeNameHash);
  return [{
    ...themeVariablesObject,
    __themeName__: themeNameHash
  }, injectableStyles];
}
function constructCssVariablesString(variables, themeNameHash) {
  const ruleByAtRule = {};
  for (const [key, {
    nameHash,
    value
  }] of (0, _objectUtils.objEntries)(variables)) {
    if (value !== null && typeof value === 'object') {
      if (value.default === undefined) {
        throw new Error('Default value is not defined for ' + key + ' variable.');
      }
      const v = value;
      for (const [key, value] of (0, _objectUtils.objEntries)(v)) {
        ruleByAtRule[key] ??= [];
        ruleByAtRule[key].push(`--${nameHash}:${value};`);
      }
    } else {
      ruleByAtRule.default ??= [];
      ruleByAtRule.default.push(`--${nameHash}:${value};`);
    }
  }
  const result = {};
  for (const [key, value] of (0, _objectUtils.objEntries)(ruleByAtRule)) {
    const suffix = key === 'default' ? '' : `-${(0, _hash.default)(key)}`;
    let ltr = `:root{${value.join('')}}`;
    if (key !== 'default') {
      ltr = `${key}{${ltr}}`;
    }
    result[themeNameHash + suffix] = {
      ltr,
      rtl: null,
      priority: key === 'default' ? 0 : 0.1
    };
  }
  return result;
}