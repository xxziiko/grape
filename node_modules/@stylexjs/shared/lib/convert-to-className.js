"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertStyleToClassName = convertStyleToClassName;
var _hash = _interopRequireDefault(require("./hash"));
var _dashify = _interopRequireDefault(require("./utils/dashify"));
var _transformValue = _interopRequireDefault(require("./transform-value"));
var _generateCssRule = require("./generate-css-rule");
var _defaultOptions = require("./utils/default-options");
var _objectUtils = require("./utils/object-utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function convertStyleToClassName(objEntry, pseudos, atRules) {
  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _defaultOptions.defaultOptions;
  const {
    classNamePrefix = 'x'
  } = options;
  const [key, rawValue] = objEntry;
  const dashedKey = (0, _dashify.default)(key);
  const value = Array.isArray(rawValue) ? rawValue.map(eachValue => (0, _transformValue.default)(key, eachValue, options)) : (0, _transformValue.default)(key, rawValue, options);
  const sortedPseudos = (0, _objectUtils.arraySort)(pseudos ?? []);
  const sortedAtRules = (0, _objectUtils.arraySort)(atRules ?? []);
  const atRuleHashString = sortedPseudos.join('');
  const pseudoHashString = sortedAtRules.join('');
  const modifierHashString = atRuleHashString + pseudoHashString || 'null';
  const stringToHash = Array.isArray(value) ? dashedKey + value.join(', ') + modifierHashString : dashedKey + value + modifierHashString;
  const className = classNamePrefix + (0, _hash.default)('<>' + stringToHash);
  const cssRules = (0, _generateCssRule.generateRule)(className, dashedKey, value, pseudos, atRules);
  return [key, className, cssRules];
}