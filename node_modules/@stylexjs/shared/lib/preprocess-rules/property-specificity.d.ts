/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */

import type { TStyleValue } from '../common-types';
type TReturn = ReadonlyArray<[string, TStyleValue]>;
declare const shorthands: {
  all: (_: TStyleValue) => TReturn;
  animation: (_value: TStyleValue) => TReturn;
  background: (_value: TStyleValue) => TReturn;
  border: (_rawValue: TStyleValue) => TReturn;
  borderInline: (_rawValue: TStyleValue) => TReturn;
  borderBlock: (_rawValue: TStyleValue) => TReturn;
  borderTop: (_rawValue: TStyleValue) => TReturn;
  borderInlineEnd: (_rawValue: TStyleValue) => TReturn;
  borderRight: (_rawValue: TStyleValue) => TReturn;
  borderBottom: (_rawValue: TStyleValue) => TReturn;
  borderInlineStart: (_rawValue: TStyleValue) => TReturn;
  borderLeft: (_rawValue: TStyleValue) => TReturn;
};
declare const aliases: {
  borderHorizontal: any;
  borderVertical: any;
  borderBlockStart: any;
  borderEnd: any;
  borderBlockEnd: any;
  borderStart: any;
  blockSize: (val: TStyleValue) => TReturn;
  inlineSize: (val: TStyleValue) => TReturn;
  minBlockSize: (val: TStyleValue) => TReturn;
  minInlineSize: (val: TStyleValue) => TReturn;
  maxBlockSize: (val: TStyleValue) => TReturn;
  maxInlineSize: (val: TStyleValue) => TReturn;
  borderHorizontalWidth: (val: TStyleValue) => TReturn;
  borderHorizontalStyle: (val: TStyleValue) => TReturn;
  borderHorizontalColor: (val: TStyleValue) => TReturn;
  borderVerticalWidth: (val: TStyleValue) => TReturn;
  borderVerticalStyle: (val: TStyleValue) => TReturn;
  borderVerticalColor: (val: TStyleValue) => TReturn;
  borderBlockStartColor: (value: TStyleValue) => TReturn;
  borderBlockEndColor: (value: TStyleValue) => TReturn;
  borderBlockStartStyle: (value: TStyleValue) => TReturn;
  borderBlockEndStyle: (value: TStyleValue) => TReturn;
  borderBlockStartWidth: (value: TStyleValue) => TReturn;
  borderBlockEndWidth: (value: TStyleValue) => TReturn;
  borderStartColor: (val: TStyleValue) => TReturn;
  borderEndColor: (val: TStyleValue) => TReturn;
  borderStartStyle: (val: TStyleValue) => TReturn;
  borderEndStyle: (val: TStyleValue) => TReturn;
  borderStartWidth: (val: TStyleValue) => TReturn;
  borderEndWidth: (val: TStyleValue) => TReturn;
  borderTopStartRadius: (value: TStyleValue) => TReturn;
  borderTopEndRadius: (value: TStyleValue) => TReturn;
  borderBottomStartRadius: (value: TStyleValue) => TReturn;
  borderBottomEndRadius: (value: TStyleValue) => TReturn;
  containIntrinsicBlockSize: (value: TStyleValue) => TReturn;
  containIntrinsicInlineSize: (value: TStyleValue) => TReturn;
  marginBlockStart: (value: TStyleValue) => TReturn;
  marginBlockEnd: (value: TStyleValue) => TReturn;
  marginStart: (val: TStyleValue) => TReturn;
  marginEnd: (val: TStyleValue) => TReturn;
  marginHorizontal: (val: TStyleValue) => TReturn;
  marginVertical: (val: TStyleValue) => TReturn;
  overflowBlock: (value: TStyleValue) => TReturn;
  overflowInline: (value: TStyleValue) => TReturn;
  paddingBlockStart: (rawValue: TStyleValue) => TReturn;
  paddingBlockEnd: (rawValue: TStyleValue) => TReturn;
  paddingStart: (val: TStyleValue) => TReturn;
  paddingEnd: (val: TStyleValue) => TReturn;
  paddingHorizontal: (val: TStyleValue) => TReturn;
  paddingVertical: (val: TStyleValue) => TReturn;
  scrollMarginBlockStart: (value: TStyleValue) => TReturn;
  scrollMarginBlockEnd: (value: TStyleValue) => TReturn;
  insetBlockStart: (value: TStyleValue) => TReturn;
  insetBlockEnd: (value: TStyleValue) => TReturn;
  start: (val: TStyleValue) => TReturn;
  end: (val: TStyleValue) => TReturn;
};
declare const $$EXPORT_DEFAULT_DECLARATION$$: Readonly</**
 * > 96 |   ...typeof shorthands,
 *      |   ^^^^^^^^^^^^^^^^^^^^ Unsupported feature: Translating "object types with complex spreads" is currently not supported.
 **/
any>;
export default $$EXPORT_DEFAULT_DECLARATION$$;
